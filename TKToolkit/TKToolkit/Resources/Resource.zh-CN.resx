<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Apply" xml:space="preserve">
    <value>套用</value>
  </data>
  <data name="Attributes" xml:space="preserve">
    <value>属性</value>
  </data>
  <data name="Debug" xml:space="preserve">
    <value>侦错</value>
  </data>
  <data name="Debug Termial" xml:space="preserve">
    <value>终端机</value>
  </data>
  <data name="Device not found" xml:space="preserve">
    <value>装置未连接</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>下载</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>英文</value>
  </data>
  <data name="Excute" xml:space="preserve">
    <value>开始侦错</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>裂开</value>
  </data>
  <data name="Files" xml:space="preserve">
    <value>档案</value>
  </data>
  <data name="IC_model or Scan_type changed" xml:space="preserve">
    <value>IC_model或Scan_type的变更会清除编辑区内的所有物件，您必须重新编辑，您确定要套用？</value>
  </data>
  <data name="KeyAvailable" xml:space="preserve">
    <value>个key可使用</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>语言</value>
  </data>
  <data name="Library" xml:space="preserve">
    <value>元件库</value>
  </data>
  <data name="New Project" xml:space="preserve">
    <value>新增专案</value>
  </data>
  <data name="NewFile" xml:space="preserve">
    <value>新增</value>
  </data>
  <data name="Only available in" xml:space="preserve">
    <value>请输入介于</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>开启</value>
  </data>
  <data name="Open Project" xml:space="preserve">
    <value>开启专案</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>专案</value>
  </data>
  <data name="Project File" xml:space="preserve">
    <value>专案档</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>储存</value>
  </data>
  <data name="Save and exit?" xml:space="preserve">
    <value>储存并离开?</value>
  </data>
  <data name="Save As" xml:space="preserve">
    <value>另存</value>
  </data>
  <data name="Save Project" xml:space="preserve">
    <value>储存专案</value>
  </data>
  <data name="Setting" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="Simplified Chinese" xml:space="preserve">
    <value>简体中文</value>
  </data>
  <data name="StillHave" xml:space="preserve">
    <value>尚有</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>停止侦测</value>
  </data>
  <data name="Traditional Chinese" xml:space="preserve">
    <value>繁体中文</value>
  </data>
  <data name="values" xml:space="preserve">
    <value>间数值</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>检视</value>
  </data>
  <data name="warning" xml:space="preserve">
    <value>注意</value>
  </data>
  <data name="You have to download code first" xml:space="preserve">
    <value>请先下载原始码</value>
  </data>
</root>